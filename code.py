# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Pl5xeJdzZPqLQC6EuqOj3AaA9bkODt5l
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Load dataset
data = pd.read_csv('/content/hospital_readmissions.csv')

# Display basic info
data.info()
print(data.head())

# Preprocessing: Dropping irrelevant columns
drop_columns = ['medical_specialty', 'diag_1', 'diag_2', 'diag_3']
data = data.drop(columns=drop_columns)

# Encoding categorical variables
le = LabelEncoder()
categorical_cols = ['age', 'glucose_test', 'A1Ctest', 'change', 'diabetes_med']
for col in categorical_cols:
    data[col] = le.fit_transform(data[col].astype(str))

data['readmitted'] = data['readmitted'].apply(lambda x: 1 if x == 'yes' else 0)

# Splitting dataset into training and testing sets
X = data.drop(columns=['readmitted'])
y = data['readmitted']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardizing numerical features
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Machine Learning Model (Random Forest)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# Model evaluation
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.show()